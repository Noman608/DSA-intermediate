import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class Clinet {

	public static void main(String[] args) {
		int matrix[][] = { { 1, 3, 5, 7 }, { 10, 11, 16, 20 }, { 23, 30, 34, 60 } };
		int min = Integer.MAX_VALUE;
		int max = Integer.MIN_VALUE;
		for (int i = 0; i < 3; i++) {
			if (matrix[i][0] < min)
				min = matrix[i][0];
			if (matrix[i][2] > max)
				max = matrix[i][3];
		}
		int desired = ((3 * 4) + 1) / 2;
		while (min < max) {
			int mid = min + (max - min) / 2;
			int place  = 0 ;
			int get = 0;
			for(int i=0;i<3;i++) {
				get = Arrays.binarySearch(matrix[i], mid);
				if(get<0)
					get = Math.abs(get)-1;
				else {
					while(get < m[i].length && m[i][get] == mid )
				}
			}
		}

	}

}
