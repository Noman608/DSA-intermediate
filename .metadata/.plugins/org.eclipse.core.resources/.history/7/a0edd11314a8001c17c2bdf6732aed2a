
public class LinkledList {

	private class Node {
		int data;
		Node next;
	}

	private Node head;
	private Node tail;
	private int size = 0;

	public void display() {
		System.out.println("--------------");
		Node temp = this.head;
		while (temp != null) {
			System.out.println(temp.data);
			temp = temp.next;
		}
		System.out.println("--------------");
	}

	public void addLast(int item) {

		Node newNode = new Node();
		newNode.data = item;
		newNode.next = null;
		if (this.size >= 1) {
			this.tail.next = newNode;
		}

		// update summary object
		if (this.size == 0) {
			this.head = newNode;
			this.tail = newNode;
			this.size++;
		} else {
			this.tail = newNode;
			this.size++;
		}

	}

	public void addFirst(int val) {
		Node newNode = new Node();
		newNode.data = val;
		newNode.next = null;
		if (this.size >= 1) {
			newNode.next = this.head;

		}
		if (this.size == 0) {
			this.head = newNode;
			this.tail = newNode;
			this.size++;
		} else {
			this.head = newNode;
			size++;
		}
	}

	public int getFirst() throws Exception {
		if (this.size == 0)
			throw new Exception("LinkedList is Empty!");
		return this.head.data;
	}

	public int getLast() throws Exception {
		if (this.size == 0)
			throw new Exception("LinkedList is Empity!");
		return this.tail.data;
	}

	public int getAt(int index) throws Exception {
		if (this.size == 0) {
			throw new Exception("LikedList is Empty");
		}
		if (index < 0 || index >= this.size) {
			throw new Exception("index is not valid");
		}

		Node temp = head;
		for (int i = 0; i <= index; i++)
			temp = temp.next;

		return temp.data;

	}
}
