

public class Practice {
	public static int fib(int n) {
		if(n==0 || n== 1)
			return n;
		return fib(n-1)+fib(n-2);
	}
	
	//recurstion and memoisation(top down)
	public static int fibDP(int n,int arr[]) {
		if(n==0 || n== 1)
			return n;
		if(arr[n] != 0)
			return arr[n];

	return	arr[n]=fibDP(n-1,arr)+fibDP(n-2,arr);
		
	}
    // buttom up
	
	public static int fibBU(int n) {
		int dp[] = new int[100];
	     dp[1]=1;
	     for(int i =2;i<=n;i++) {
	    	 dp[n]= dp[n-1]+dp[n-2];
	     }
	     return dp[n];
		
	}
	public static void main(String[] args) {
		
	   System.out.println(fibBU(10));
	
	}
	
	

}
